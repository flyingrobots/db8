name: ci
on:
  pull_request:
  push:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_DB: db8
        ports: ["54329:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s
          --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v5

      - name: Block TypeScript files
        run: |
          if git ls-files | grep -E '\\.(ts|tsx)$'; then
            echo "TypeScript files detected. Not allowed."; exit 1;
          fi

      - uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            web/package-lock.json

      - name: Install
        run: |
          npm ci || (echo "npm ci failed; retrying clean install" && rm -rf node_modules package-lock.json && npm install)

      - name: Install web deps
        run: |
          npm ci --prefix web || (echo "web npm ci failed; retrying clean install" && rm -rf web/node_modules web/package-lock.json && npm --prefix web install)

      - name: Lint
        run: npm run lint

      - name: DB setup
        env:
          PGURL: postgresql://postgres:test@localhost:54329/db8
        run: |
          if [ -f db/schema.sql ]; then psql "$PGURL" -f db/schema.sql; fi
          if [ -f db/rpc.sql ]; then psql "$PGURL" -f db/rpc.sql || true; fi

      - name: Tests
        env:
          DATABASE_URL: postgresql://postgres:test@localhost:54329/db8
        run: npm test

      - name: Tests (Postgres RPC integration)
        if: ${{ vars.RUN_PGTAP == '1' || github.event.inputs.run_pgtap == '1' }}
        env:
          RUN_PGTAP: '1'
          DATABASE_URL: postgresql://postgres:test@localhost:54329/db8
          DB8_TEST_DATABASE_URL: postgresql://postgres:test@localhost:54329/db8
        run: npx vitest run server/test/rpc.db.postgres.test.js

      - name: pgTAP (optional)
        if: ${{ vars.RUN_PGTAP == '1' || github.event.inputs.run_pgtap == '1' }}
        env:
          PGURL: postgresql://postgres:test@localhost:54329/db8
        run: |
          if [ -f "db/test/run.sh" ]; then
            chmod +x db/test/run.sh
            ./db/test/run.sh
          else
            echo "pgTAP test script not found, skipping"
          fi

  conventional-commits:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: amannn/action-semantic-pull-request@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
